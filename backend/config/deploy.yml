service: chatter-backend
image: bdeak4/chatter-backend

registry:
  server: ghcr.io
  username: bdeak4
  password:
    - MRSK_REGISTRY_PASSWORD

builder:
  multiarch: false

env:
  clear:
    LOG_QUERY_THRESHOLD_MS: 500
  secret:
    - DATABASE_URL

accessories:
  redis:
    image: redis:latest
    port: 6379
    volumes:
      - /var/lib/redis:/data

  prometheus:
    image: prom/prometheus:latest
    cmd: |
      --config.file=/etc/prometheus/prometheus.yml \
      --web.config.file=/etc/prometheus/web.yml
    volumes:
      - /var/lib/prometheus:/prometheus
    files:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus-web.yml:/etc/prometheus/web.yml
    options:
      user: root
    labels:
      traefik.http.routers.chatter-backend-prometheus.rule: Host(`prometheus.chatter.exposed`)

  node-exporter:
    image: prom/node-exporter:latest
    roles:
      - web
    cmd: |
      --path.procfs=/host/proc \
      --path.sysfs=/host/sys \
      --path.rootfs=/rootfs \
      --collector.filesystem.mount-points-exclude="^/(sys|proc|dev|host|etc)($$|/)" \
      --collector.processes
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    port: 9100

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    port: 9115

  grafana:
    image: grafana/grafana:latest
    volumes:
      - /var/lib/grafana:/var/lib/grafana
    options:
      user: root
    labels:
      traefik.http.routers.chatter-backend-grafana.rule: Host(`grafana.chatter.exposed`)

  # loki:
  #   image: grafana/loki:latest
  #   cmd: |
  #     -config.file=/etc/loki/config.yaml
  #   files:
  #     - ./config/loki.yml:/etc/loki/config.yaml
  #   port: 3100

  promtail:
    image: grafana/promtail:latest
    roles:
      - web
    cmd: |
      -config.file=/etc/promtail/config.yml \
      -config.expand-env=true
    env:
      clear:
        LOKI_HOST: logs-prod-012.grafana.net
      secret:
        - LOKI_USERNAME
        - LOKI_PASSWORD
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    files:
      - ./config/promtail.yml:/etc/promtail/config.yml

traefik:
  args:
    accesslog: true
    accesslog.format: json
    accesslog.fields.headers.defaultmode: keep
    accesslog.fields.headers.names.Authorization: drop
    accesslog.fields.headers.names.Cookie: drop
    metrics.prometheus: true
    api.dashboard: true
  options:
    publish:
      - 8080:8080
  labels:
    traefik.http.routers.dashboard.entrypoints: traefik
    traefik.http.routers.dashboard.rule: PathPrefix(`/api`, `/dashboard`)
    traefik.http.routers.dashboard.service: api@internal
    traefik.http.routers.dashboard.middlewares: auth
    traefik.http.middlewares.auth.basicauth.users: admin:$apr1$Uwv/xaLq$cOQR/Hla.bxBKlmfICqEh/

healthcheck:
  path: /trpc/maintenance.healthz
  port: 4001

audit_broadcast_cmd: ../infrastructure/scripts/audit-broadcast.sh
